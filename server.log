
> founder-match@0.1.0 dev
> next dev

   ▲ Next.js 15.4.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.2:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 3.9s
 ○ Compiling / ...
 ✓ Compiled / in 2.8s (720 modules)
 GET / 200 in 3182ms
 GET / 200 in 69ms
 ✓ Compiled /api/auth/[...nextauth] in 463ms (452 modules)
 ✓ Compiled in 380ms (286 modules)
 GET /favicon.ico 200 in 1487ms
 GET / 200 in 277ms
 GET /api/auth/session 200 in 1975ms
 ✓ Compiled /auth/signup in 448ms (974 modules)
 GET /auth/signup 200 in 569ms
 GET /auth/signup 200 in 223ms
 GET / 200 in 760ms
 GET / 200 in 790ms
 GET /api/auth/session 200 in 183ms
 GET /auth/signup 200 in 42ms
 ○ Compiling /api/auth/register ...
 ✓ Compiled /api/auth/register in 694ms (974 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`emailVerified`, `main`.`users`.`image`, `main`.`users`.`password`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizCompleted`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `password`, `quizCompleted`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
 POST /api/auth/register 200 in 1092ms
 ✓ Compiled /auth/signin in 386ms (995 modules)
 GET /auth/signin?message=Account+created+successfully 200 in 507ms
 GET /auth/signin?message=Account+created+successfully 200 in 12ms
 ✓ Compiled /favicon.ico in 113ms (703 modules)
 GET /favicon.ico 200 in 163ms
 GET /api/auth/providers 200 in 393ms
 GET /api/auth/csrf 200 in 3ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`emailVerified`, `main`.`users`.`image`, `main`.`users`.`password`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizCompleted`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
 POST /api/auth/callback/credentials 401 in 370ms
 GET /api/auth/providers 200 in 21ms
 GET /api/auth/csrf 200 in 5ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`emailVerified`, `main`.`users`.`image`, `main`.`users`.`password`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizCompleted`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
 POST /api/auth/callback/credentials 401 in 323ms
 ✓ Compiled in 443ms (294 modules)
 GET /auth/signin?message=Account+created+successfully 200 in 128ms
 GET /api/auth/providers 200 in 44ms
 GET /api/auth/csrf 200 in 8ms
prisma:query SELECT 1
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`emailVerified`, `main`.`users`.`image`, `main`.`users`.`password`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizCompleted`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt`, `main`.`users`.`updatedAt` FROM `main`.`users` WHERE (`main`.`users`.`email` = ? AND 1=1) LIMIT ? OFFSET ?
 POST /api/auth/callback/credentials 200 in 337ms
 GET /api/auth/session 200 in 7ms
 GET /api/auth/session 200 in 7ms
 ✓ Compiled /api/user-status in 425ms (981 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name`, `main`.`users`.`quizCompleted`, `main`.`users`.`personalityProfile` FROM `main`.`users` WHERE (`main`.`users`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 GET /api/user-status 200 in 583ms
 ○ Compiling /onboarding ...
 ✓ Compiled /onboarding in 534ms (988 modules)
 GET /onboarding 200 in 613ms
 ✓ Compiled /favicon.ico in 146ms (708 modules)
 GET /favicon.ico 200 in 206ms
 ✓ Compiled /api/submit-quiz in 267ms (992 modules)
prisma:query SELECT 1
prisma:query UPDATE `main`.`users` SET `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
 POST /api/submit-quiz 200 in 380ms
 ✓ Compiled /discover in 467ms (1033 modules)
 GET /discover 200 in 592ms
 GET /discover 200 in 14ms
 ✓ Compiled /api/seed in 143ms (1022 modules)
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 185ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 185ms
 ✓ Compiled /api/users in 159ms (1038 modules)
 GET /api/users 200 in 189ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /discover 200 in 69ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 5ms
 ⚠ Fast Refresh had to perform a full reload due to a runtime error.
 ✓ Compiled in 397ms (1032 modules)
 GET /discover 200 in 572ms
 GET /discover 200 in 80ms
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 82ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
 ✓ Compiled /favicon.ico in 202ms (726 modules)
 ✓ Compiled (728 modules)
 GET /favicon.ico 200 in 442ms
 GET /api/users 200 in 372ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/auth/session 200 in 460ms
 GET /onboarding 200 in 73ms
 ✓ Compiled /matches in 538ms (1036 modules)
 ✓ Compiled in 225ms (296 modules)
 GET /matches 200 in 806ms
 GET /matches 200 in 28ms
 GET /discover 200 in 41ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 45ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 49ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 11ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 15ms
 GET /matches 200 in 17ms
 GET /discover 200 in 8ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 19ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 20ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 5ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 4ms
 GET /matches 200 in 30ms
 GET /discover 200 in 31ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 33ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 36ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 6ms
 GET /api/users 200 in 5ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /onboarding 200 in 14ms
 GET /matches 200 in 16ms
 GET /discover 200 in 44ms
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 23ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 21ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 10ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 4ms
 GET /matches 200 in 31ms
 GET /onboarding 200 in 16ms
prisma:query SELECT 1
prisma:query UPDATE `main`.`users` SET `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
 POST /api/submit-quiz 200 in 167ms
 GET /discover 200 in 21ms
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 24ms
Demo users seeded successfully
 POST /api/seed 200 in 23ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 3ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 5ms
 ✓ Compiled in 970ms (1036 modules)
 GET /discover 200 in 116ms
 ✓ Compiled /api/auth/[...nextauth] in 290ms (708 modules)
 GET /api/auth/session 200 in 599ms
 GET /matches 200 in 87ms
 GET /discover 200 in 14ms
 ✓ Compiled /api/seed in 281ms (723 modules)
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 412ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 414ms
 ✓ Compiled /api/users in 78ms (725 modules)
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 106ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 3ms
 ✓ Compiled in 562ms (1022 modules)
 GET /discover 200 in 356ms
 GET /discover 200 in 8ms
 GET /discover 200 in 23ms
 GET /matches 200 in 44ms
 GET /onboarding 200 in 20ms
 GET /discover 200 in 14ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 68ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
Demo users seeded successfully
 POST /api/seed 200 in 72ms
prisma:query INSERT INTO `main`.`users` (`id`, `email`, `name`, `title`, `bio`, `skills`, `experience`, `lookingFor`, `quizCompleted`, `quizScores`, `personalityProfile`, `createdAt`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT  (`email`) DO UPDATE SET `email` = ?, `name` = ?, `title` = ?, `bio` = ?, `skills` = ?, `experience` = ?, `lookingFor` = ?, `quizCompleted` = ?, `quizScores` = ?, `personalityProfile` = ?, `updatedAt` = ? WHERE (`main`.`users`.`email` = ? AND 1=1) RETURNING `id` AS `id`, `email` AS `email`, `name` AS `name`, `emailVerified` AS `emailVerified`, `image` AS `image`, `password` AS `password`, `title` AS `title`, `bio` AS `bio`, `skills` AS `skills`, `experience` AS `experience`, `lookingFor` AS `lookingFor`, `quizCompleted` AS `quizCompleted`, `quizScores` AS `quizScores`, `personalityProfile` AS `personalityProfile`, `createdAt` AS `createdAt`, `updatedAt` AS `updatedAt`
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 11ms
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`name`, `main`.`users`.`title`, `main`.`users`.`bio`, `main`.`users`.`skills`, `main`.`users`.`experience`, `main`.`users`.`lookingFor`, `main`.`users`.`quizScores`, `main`.`users`.`personalityProfile`, `main`.`users`.`createdAt` FROM `main`.`users` WHERE `main`.`users`.`quizCompleted` = ? ORDER BY `main`.`users`.`createdAt` DESC LIMIT ? OFFSET ?
 GET /api/users 200 in 4ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 804ms (1024 modules)
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/jos/Founder Match/founder-match/.next/server/app/discover/page.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/jos/Founder Match/founder-match/.next/server/app/discover/page.js',
  page: '/discover'
}
 GET /api/auth/session 404 in 1720ms
 ⨯ [Error: ENOENT: no such file or directory, open '/Users/jos/Founder Match/founder-match/.next/server/app/api/auth/[...nextauth]/route.js'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/jos/Founder Match/founder-match/.next/server/app/api/auth/[...nextauth]/route.js',
  page: '/api/auth/_log'
}
 ○ Compiling /_error ...
 ✓ Compiled /_error in 699ms (1338 modules)
 GET /discover 500 in 1811ms
 POST /api/auth/_log 500 in 1138ms
 GET /discover 200 in 92ms
 GET /discover 200 in 9ms
 GET /discover 200 in 160ms
 GET /_next/static/css/app/layout.css?v=1753604206115 404 in 108ms
 GET /_next/static/chunks/main-app.js?v=1753604206115 404 in 32ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 69ms
 GET /_next/static/chunks/app/discover/page.js 404 in 28ms
 GET /discover 200 in 69ms
 GET /_next/static/css/app/layout.css?v=1753604264762 404 in 57ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 118ms
 GET /_next/static/chunks/app/discover/page.js 404 in 117ms
 GET /_next/static/chunks/main-app.js?v=1753604264762 404 in 120ms
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 544ms (903 modules)
 GET /favicon.ico 200 in 668ms
 GET /discover 200 in 176ms
 GET /_next/static/css/app/layout.css?v=1753604265955 404 in 132ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 130ms
 GET /_next/static/chunks/main-app.js?v=1753604265955 404 in 131ms
 GET /_next/static/chunks/app/discover/page.js 404 in 128ms
 GET /favicon.ico 200 in 13ms
 GET /discover 200 in 107ms
 GET /_next/static/css/app/layout.css?v=1753604319317 404 in 90ms
 GET /_next/static/chunks/app/discover/page.js 404 in 113ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 115ms
 GET /_next/static/chunks/main-app.js?v=1753604319317 404 in 136ms
 GET /favicon.ico 200 in 11ms
 GET / 200 in 98ms
 GET /_next/static/css/app/layout.css?v=1753604336489 404 in 41ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 77ms
 GET /_next/static/chunks/main-app.js?v=1753604336489 404 in 83ms
 GET /_next/static/chunks/app/page.js 404 in 74ms
 GET / 200 in 151ms
 GET /_next/static/css/app/layout.css?v=1753604406267 404 in 47ms
 GET /_next/static/chunks/main-app.js?v=1753604406267 404 in 114ms
 GET /_next/static/chunks/app/page.js 404 in 93ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 113ms
 GET /favicon.ico 200 in 9ms
 GET / 200 in 51ms
 GET /_next/static/css/app/layout.css?v=1753604407958 404 in 82ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 106ms
 GET /_next/static/chunks/main-app.js?v=1753604407958 404 in 108ms
 GET /_next/static/chunks/app/page.js 404 in 79ms
 GET /favicon.ico 200 in 8ms
 GET /_next/static/css/app/layout.css?v=1753604411408 404 in 99ms
 GET /_next/static/chunks/main-app.js?v=1753604411408 404 in 116ms
 GET /_next/static/chunks/app-pages-internals.js 404 in 115ms
 GET / 200 in 216ms
 GET /_next/static/chunks/app/page.js 404 in 21ms
 GET /favicon.ico 200 in 9ms
[?25h
